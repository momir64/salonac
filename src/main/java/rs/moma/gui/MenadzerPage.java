package rs.moma.gui;

import rs.moma.helper.NazivVrednostVreme;
import rs.moma.helper.BrojVrednost;
import rs.moma.helper.KeyValue;
import rs.moma.managers.ZakazaniTretmani;
import rs.moma.managers.Klijenti;
import rs.moma.managers.Isplate;
import rs.moma.entities.Zaposlen;
import rs.moma.entities.Tretman;
import rs.moma.entities.Klijent;
import rs.moma.entities.Salon;
import rs.moma.gui.helper.*;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Locale;

import static javax.swing.JOptionPane.showMessageDialog;
import static rs.moma.helper.DataTools.EStanjeTermina.*;
import static rs.moma.helper.DataTools.*;

public class MenadzerPage extends JFrame {
    private JTextField           odPeriodIzvestajiTxt;
    private JTextField           doPeriodIzvestajiTxt;
    private JTable               zaposleniIzvestajTbl;
    private JTable               tretmaniIzvestajTbl;
    private JButton              isplatiZaposleneBtn;
    private JButton              removeBonusRuleBtn;
    private JTextField           odPeriodPrihodiTxt;
    private JTextField           doPeriodPrihodiTxt;
    private JTable               prihodiRashodiTbl;
    private JLabel               otkazaoKlijentLbl;
    private JButton              saveBonusRuleBtn;
    private JLabel               nijeSePojavioLbl;
    private JButton              editSalonDataBtn;
    private JButton              makeIzvestajiBtn;
    private JButton              removeEntietBtn;
    private JLabel               otkazaoSalonLbl;
    private JTextField           minLojalnostTxt;
    private JTextField           bonusOfWhatTxt;
    private JComboBox<NameValue> bonusOfWhatBox;
    private JButton              makeLojalneBtn;
    private JButton              showPrihodiBtn;
    private JButton              editEntitetBtn;
    private JComboBox<NameValue> entitetTypeBox;
    private JTextField           bonusPeriodTxt;
    private JTextField           pocetakRadaTxt;
    private JComboBox<NameValue> bonusPeriodBox;
    private JTextField           nazivSalonaTxt;
    private JButton              addEntitetBtn;
    private JComboBox<NameValue> bonusRuleBox;
    private JTextField           krajRadaTxt;
    private JTable               entitetiTbl;
    private JLabel               izvrsenoLbl;
    private JList<String>        lojalniLst;
    private JLabel               prihodiLbl;
    private JLabel               rashodiLbl;
    private JTabbedPane          tabbedPane;
    private JPanel               mainPanel;
    private JLabel               saldoLbl;

    public MenadzerPage(Zaposlen menadzer) {
        $$$setupUI$$$();
        setSize(1300, 950);
        setContentPane(mainPanel);
        setLocationRelativeTo(null);
        setMinimumSize(new Dimension(1245, 801));
        setTitle(menadzer.Ime + " " + menadzer.Prezime);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        Salon salon = new Salon();
        nazivSalonaTxt.setText(String.valueOf(salon.Naziv));
        pocetakRadaTxt.setText(salon.PocetakRadnogVremena + "h");
        krajRadaTxt.setText(salon.KrajRadnogVremena + "h");
        minLojalnostTxt.setText(String.valueOf(salon.MinIznosLojalnosti));

        bonusPeriodBox.setModel(new DefaultComboBoxModel<>(new NameValue[]{new NameValue("Dana", "d"), new NameValue("Nedelja", "w"), new NameValue("Meseci", "m")}));
        bonusOfWhatBox.setModel(new DefaultComboBoxModel<>(new NameValue[]{new NameValue("Broja", "c"), new NameValue("Vrednosti", "v")}));
        fillBonusRules(salon.Bonus.split("\\+"));

        zaposleniIzvestajTbl.setModel(new IzvestajTableModel(new Object[][]{}, new String[]{"Kozmetičar", "Izvršio", "Prihodovao"}));
        tretmaniIzvestajTbl.setModel(new IzvestajTableModel(new Object[][]{}, new String[]{"Tretman", "Izvršeno", "Vrednost"}));
        prihodiRashodiTbl.setModel(new PrihodiTableModel(new Object[][]{}, new String[]{"Vreme", "Naziv", "Iznos"}));
        setIzvestajiWidth();
        setPrihodiWidth();

        zaposleniIzvestajTbl.getTableHeader().setReorderingAllowed(false);
        tretmaniIzvestajTbl.getTableHeader().setReorderingAllowed(false);
        prihodiRashodiTbl.getTableHeader().setReorderingAllowed(false);
        zaposleniIzvestajTbl.setSelectionModel(new NoSelectionModel());
        tretmaniIzvestajTbl.setSelectionModel(new NoSelectionModel());
        prihodiRashodiTbl.setSelectionModel(new NoSelectionModel());
        lojalniLst.setSelectionModel(new NoSelectionModel());
        zaposleniIzvestajTbl.setAutoCreateRowSorter(true);
        tretmaniIzvestajTbl.setAutoCreateRowSorter(true);
        prihodiRashodiTbl.setAutoCreateRowSorter(true);

        odPeriodIzvestajiTxt.setText(new ZakazaniTretmani().getOldestDate().format(DateTimeFormatter.ofPattern("dd.MM.yyyy.")));
        odPeriodPrihodiTxt.setText(new Salon().getOldestPrihodRashod().format(DateTimeFormatter.ofPattern("dd.MM.yyyy.")));
        doPeriodIzvestajiTxt.setText(LocalDate.now().format(DateTimeFormatter.ofPattern("dd.MM.yyyy.")));
        doPeriodPrihodiTxt.setText(LocalDate.now().format(DateTimeFormatter.ofPattern("dd.MM.yyyy.")));

        minLojalnostTxt.addKeyListener(new NumericKeyAdapter(true));
        bonusPeriodTxt.addKeyListener(new NumericKeyAdapter(false));
        bonusOfWhatTxt.addKeyListener(new NumericKeyAdapter(true));
        odPeriodIzvestajiTxt.addKeyListener(new DateKeyAdapter());
        doPeriodIzvestajiTxt.addKeyListener(new DateKeyAdapter());
        odPeriodPrihodiTxt.addKeyListener(new DateKeyAdapter());
        doPeriodPrihodiTxt.addKeyListener(new DateKeyAdapter());
        pocetakRadaTxt.addKeyListener(new TimeKeyAdapter());
        krajRadaTxt.addKeyListener(new TimeKeyAdapter());

        isplatiZaposleneBtn.addActionListener(e -> isplariZaposlene());
        removeBonusRuleBtn.addActionListener(e -> removeBonusRule());
        saveBonusRuleBtn.addActionListener(e -> saveBonusRule());
        makeIzvestajiBtn.addActionListener(e -> makeIzvestaji());
        editSalonDataBtn.addActionListener(e -> editSalon());
        makeLojalneBtn.addActionListener(e -> makeLojalne());
        showPrihodiBtn.addActionListener(e -> showPrihodi());
        bonusRuleBox.addActionListener(e -> fillBonusRule());

        setVisible(true);
        fillBonusRule();
        makeIzvestaji();
        showPrihodi();
        makeLojalne();
    }

    public void showPrihodi() {
        LocalDateTime to   = getDatum(doPeriodPrihodiTxt) != null ? getDatum(doPeriodPrihodiTxt).atTime(LocalTime.MAX) : null;
        LocalDateTime from = getDatum(odPeriodPrihodiTxt) != null ? getDatum(odPeriodPrihodiTxt).atStartOfDay() : null;

        ArrayList<NazivVrednostVreme> finansije = new Salon().getFinansije(from, to);

        if (from != null && to != null && from.isBefore(to)) {
            ArrayList<Object[]> values = new ArrayList<>();
            for (NazivVrednostVreme nvv : finansije)
                values.add(new Object[]{nvv.Vreme, nvv.Naziv, nvv.Vrednost});
            prihodiRashodiTbl.setModel(new PrihodiTableModel(values.toArray(new Object[][]{}), new String[]{"Vreme", "Naziv", "Iznos"}));
            prihodiLbl.setText(String.format("%,.2f", new ZakazaniTretmani().getPrihodiVrednost(from, to)) + " RSD");
            rashodiLbl.setText(String.format("%,.2f", new Isplate().getRashodiVrednost(from, to)) + " RSD");
            saldoLbl.setText(String.format("%,.2f", finansije.stream().mapToDouble(nvv -> nvv.Vrednost).sum()) + " RSD");
            setPrihodiWidth();
        } else {
            showMessageDialog(this, "Neispravan period!");
            if (!finansije.isEmpty())
                odPeriodPrihodiTxt.setText(new Salon().getOldestPrihodRashod().format(DateTimeFormatter.ofPattern("dd.MM.yyyy.")));
            doPeriodPrihodiTxt.setText(LocalDate.now().format(DateTimeFormatter.ofPattern("dd.MM.yyyy.")));
        }
    }

    public void isplariZaposlene() {
        new Isplate().isplati();
    }

    public String getBonusRuleData() {
        if (bonusPeriodBox.getSelectedItem() == null || bonusOfWhatBox.getSelectedItem() == null) return null;
        return ((NameValue) bonusPeriodBox.getSelectedItem()).Value + "-" + bonusPeriodTxt.getText() + "-" +
               ((NameValue) bonusOfWhatBox.getSelectedItem()).Value + "-" + bonusOfWhatTxt.getText();
    }

    public void saveBonusRule() {
        bonusPeriodTxt.setText(simplifyFloatToString(Float.parseFloat(bonusPeriodTxt.getText())));
        bonusOfWhatTxt.setText(simplifyFloatToString(Float.parseFloat(bonusOfWhatTxt.getText())));
        ArrayList<String> rules = new ArrayList<>();
        for (int i = 0; i < bonusRuleBox.getItemCount(); i++)
            if (i == bonusRuleBox.getSelectedIndex())
                rules.add(getBonusRuleData());
            else if (bonusRuleBox.getItemAt(i).Value != null)
                rules.add((String) bonusRuleBox.getItemAt(i).Value);
        new Salon().edit(null, -1, -1, -1, String.join("+", rules));
        int oldPos = bonusRuleBox.getSelectedIndex();
        fillBonusRules(rules.toArray(new String[0]));
        bonusRuleBox.setSelectedIndex(oldPos);
    }

    public void removeBonusRule() {
        if (bonusRuleBox.getSelectedIndex() == bonusRuleBox.getItemCount() - 1) return;
        ArrayList<String> rules = new ArrayList<>();
        for (int i = 0; i < bonusRuleBox.getItemCount() - 1; i++)
            if (i != bonusRuleBox.getSelectedIndex() && bonusRuleBox.getItemAt(i).Value != null)
                rules.add((String) bonusRuleBox.getItemAt(i).Value);
        new Salon().edit(null, -1, -1, -1, String.join("+", rules));
        fillBonusRules(rules.toArray(new String[0]));
    }

    public void fillBonusRules(String[] rules) {
        bonusRuleBox.removeAllItems();
        for (int i = 0; i < rules.length; i++) bonusRuleBox.addItem(new NameValue("Bonus pravilo " + (i + 1), rules[i]));
        bonusRuleBox.addItem(new NameValue("Novo pravilo", null));
    }

    public void fillBonusRule() {
        if (bonusRuleBox.getSelectedItem() == null) return;
        String rule = (String) ((NameValue) bonusRuleBox.getSelectedItem()).Value;
        if (rule == null) {
            bonusPeriodBox.setSelectedIndex(0);
            bonusOfWhatBox.setSelectedIndex(0);
            bonusPeriodTxt.setText("0");
            bonusOfWhatTxt.setText("0");
        } else {
            String[] parts = rule.split("-");
            bonusPeriodBox.setSelectedItem(new NameValue("", parts[0]));
            bonusPeriodTxt.setText(parts[1]);
            bonusOfWhatBox.setSelectedItem(new NameValue("", parts[2]));
            bonusOfWhatTxt.setText(parts[3]);
        }
    }

    public void setPrihodiWidth() {
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.LEFT);
        int WIDTH1 = 190;
        int WIDTH2 = 150;
        prihodiRashodiTbl.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        prihodiRashodiTbl.getColumnModel().getColumn(2).setCellRenderer(new FloatRenderer());
        prihodiRashodiTbl.getColumnModel().getColumn(0).setCellRenderer(new DateRenderer());
        prihodiRashodiTbl.getColumnModel().getColumn(2).setPreferredWidth(WIDTH2);
        prihodiRashodiTbl.getColumnModel().getColumn(0).setPreferredWidth(WIDTH1);
        prihodiRashodiTbl.getColumnModel().getColumn(2).setMaxWidth(WIDTH2);
        prihodiRashodiTbl.getColumnModel().getColumn(0).setMaxWidth(WIDTH1);
        prihodiRashodiTbl.getColumnModel().getColumn(0).setMinWidth(1);
        prihodiRashodiTbl.getColumnModel().getColumn(2).setMinWidth(1);
    }

    public void setIzvestajiWidth() {
        int WIDTH1 = 100;
        int WIDTH2 = 150;
        zaposleniIzvestajTbl.getColumnModel().getColumn(2).setCellRenderer(new FloatRenderer());
        tretmaniIzvestajTbl.getColumnModel().getColumn(2).setCellRenderer(new FloatRenderer());
        zaposleniIzvestajTbl.getColumnModel().getColumn(2).setPreferredWidth(WIDTH2);
        zaposleniIzvestajTbl.getColumnModel().getColumn(1).setPreferredWidth(WIDTH1);
        tretmaniIzvestajTbl.getColumnModel().getColumn(2).setPreferredWidth(WIDTH2);
        tretmaniIzvestajTbl.getColumnModel().getColumn(1).setPreferredWidth(WIDTH1);
        zaposleniIzvestajTbl.getColumnModel().getColumn(2).setMaxWidth(WIDTH2);
        zaposleniIzvestajTbl.getColumnModel().getColumn(1).setMaxWidth(WIDTH1);
        tretmaniIzvestajTbl.getColumnModel().getColumn(2).setMaxWidth(WIDTH2);
        tretmaniIzvestajTbl.getColumnModel().getColumn(1).setMaxWidth(WIDTH1);
        zaposleniIzvestajTbl.getColumnModel().getColumn(1).setMinWidth(1);
        zaposleniIzvestajTbl.getColumnModel().getColumn(2).setMinWidth(1);
        tretmaniIzvestajTbl.getColumnModel().getColumn(2).setMinWidth(1);
        tretmaniIzvestajTbl.getColumnModel().getColumn(1).setMinWidth(1);
    }

    public void makeIzvestaji() {
        ZakazaniTretmani tretmani = new ZakazaniTretmani();
        LocalDateTime    from     = getDatum(odPeriodIzvestajiTxt) != null ? getDatum(odPeriodIzvestajiTxt).atStartOfDay() : null;
        LocalDateTime    to       = getDatum(doPeriodIzvestajiTxt) != null ? getDatum(doPeriodIzvestajiTxt).atTime(LocalTime.MAX) : null;

        if (from != null && to != null && from.isBefore(to)) {
            izvrsenoLbl.setText(String.valueOf(tretmani.countOfStatus(IZVRSEN, from, to)));
            nijeSePojavioLbl.setText(String.valueOf(tretmani.countOfStatus(NIJE_SE_POJAVIO, from, to)));
            otkazaoKlijentLbl.setText(String.valueOf(tretmani.countOfStatus(OTKAZAO_KLIJENT, from, to)));
            otkazaoSalonLbl.setText(String.valueOf(tretmani.countOfStatus(OTKAZAO_SALON, from, to)));

            ArrayList<Object[]> values = new ArrayList<>();
            for (KeyValue kv : tretmani.getTretmaniIzvestaj(from, to))
                values.add(new Object[]{((Tretman) kv.Key).Naziv, String.valueOf(((BrojVrednost) kv.Value).Broj), ((BrojVrednost) kv.Value).Vrednost});
            tretmaniIzvestajTbl.setModel(new IzvestajTableModel(values.toArray(new Object[][]{}), new String[]{"Tretman", "Izvršeno", "Vrednost"}));

            values.clear();
            for (KeyValue kv : tretmani.getKozmeticariIzvestaj(from, to))
                values.add(new Object[]{((Zaposlen) kv.Key).getDisplayName(), ((BrojVrednost) kv.Value).Broj, ((BrojVrednost) kv.Value).Vrednost});
            zaposleniIzvestajTbl.setModel(new IzvestajTableModel(values.toArray(new Object[][]{}), new String[]{"Kozmetičar", "Izvršio", "Prihodovao"}));

            setIzvestajiWidth();
        } else {
            showMessageDialog(this, "Neispravan period!");
            odPeriodIzvestajiTxt.setText(new ZakazaniTretmani().getOldestDate().format(DateTimeFormatter.ofPattern("dd.MM.yyyy.")));
            doPeriodIzvestajiTxt.setText(LocalDate.now().format(DateTimeFormatter.ofPattern("dd.MM.yyyy.")));
        }
    }

    public int txtTimeToInt(JTextField txt) {
        return Integer.parseInt(txt.getText().replace("h", ""));
    }

    public void editSalon() {
        Salon salon = new Salon();
        if (txtTimeToInt(pocetakRadaTxt) < txtTimeToInt(krajRadaTxt)) {
            salon.edit(nazivSalonaTxt.getText(), txtTimeToInt(pocetakRadaTxt), txtTimeToInt(krajRadaTxt), -1, null);
            showMessageDialog(this, "Uspešno čuvanje podataka!");
        } else {
            showMessageDialog(this, "Neispravno radno vreme!");
            pocetakRadaTxt.setText(salon.PocetakRadnogVremena + "h");
            krajRadaTxt.setText(salon.KrajRadnogVremena + "h");
        }
    }

    public void makeLojalne() {
        new Salon().edit(null, -1, -1, txtToFloat(minLojalnostTxt), null);
        ArrayList<String> output = new ArrayList<>(Arrays.asList(padRight("Klijent", 30) + "Potrošio", ""));
        output.addAll(toArrayList(new Klijenti().getLojalne().stream().sorted(Comparator.comparing(Klijent::getUkupnoPlatio).reversed())
                                                .map(klijent -> padRight(klijent.getDisplayName(), 30) + klijent.getUkupnoPlatio())));
        lojalniLst.setListData(output.toArray(new String[0]));
    }

    private void createUIComponents() {
        prihodiRashodiTbl = new StripedTable();
    }
    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        tabbedPane = new JTabbedPane();
        GridBagConstraints gbc;
        gbc         = new GridBagConstraints();
        gbc.gridx   = 0;
        gbc.gridy   = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill    = GridBagConstraints.BOTH;
        mainPanel.add(tabbedPane, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        tabbedPane.addTab("Finansije", panel1);
        final JPanel spacer1 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 0;
        gbc.gridy      = 1;
        gbc.gridheight = 7;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipadx      = 60;
        panel1.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 0;
        gbc.gridy     = 8;
        gbc.gridwidth = 8;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 60;
        panel1.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 7;
        gbc.gridy      = 1;
        gbc.gridheight = 7;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipadx      = 60;
        panel1.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 0;
        gbc.gridy     = 0;
        gbc.gridwidth = 8;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 60;
        panel1.add(spacer4, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Ukupni prihodi: ");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 1;
        gbc.gridy  = 5;
        gbc.fill   = GridBagConstraints.BOTH;
        gbc.ipadx  = 15;
        gbc.ipady  = 5;
        gbc.insets = new Insets(0, 0, 3, 0);
        panel1.add(label1, gbc);
        prihodiLbl = new JLabel();
        prihodiLbl.setHorizontalAlignment(4);
        prihodiLbl.setHorizontalTextPosition(4);
        prihodiLbl.setMinimumSize(new Dimension(150, 17));
        prihodiLbl.setText("0 RSD");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 2;
        gbc.gridy  = 5;
        gbc.fill   = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 15, 3, 0);
        panel1.add(prihodiLbl, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Ukupni rashodi: ");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 1;
        gbc.gridy  = 6;
        gbc.fill   = GridBagConstraints.BOTH;
        gbc.ipady  = 5;
        gbc.insets = new Insets(0, 0, 3, 0);
        panel1.add(label2, gbc);
        rashodiLbl = new JLabel();
        rashodiLbl.setHorizontalAlignment(4);
        rashodiLbl.setHorizontalTextPosition(4);
        rashodiLbl.setMinimumSize(new Dimension(150, 17));
        rashodiLbl.setText("0 RSD");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 2;
        gbc.gridy  = 6;
        gbc.fill   = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 15, 3, 0);
        panel1.add(rashodiLbl, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Saldo: ");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 1;
        gbc.gridy  = 7;
        gbc.fill   = GridBagConstraints.BOTH;
        gbc.ipady  = 5;
        gbc.insets = new Insets(0, 0, 3, 0);
        panel1.add(label3, gbc);
        saldoLbl = new JLabel();
        saldoLbl.setHorizontalAlignment(4);
        saldoLbl.setHorizontalTextPosition(4);
        saldoLbl.setMinimumSize(new Dimension(150, 17));
        saldoLbl.setText("0 RSD");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 2;
        gbc.gridy  = 7;
        gbc.fill   = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 15, 3, 0);
        panel1.add(saldoLbl, gbc);
        final JPanel spacer5 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 3;
        gbc.gridy      = 5;
        gbc.gridheight = 3;
        gbc.weightx    = 1.0;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer5, gbc);
        final JPanel spacer6 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 1;
        gbc.gridy     = 4;
        gbc.gridwidth = 6;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 20;
        panel1.add(spacer6, gbc);
        final JPanel spacer7 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 1;
        gbc.gridy     = 2;
        gbc.gridwidth = 6;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 70;
        panel1.add(spacer7, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        gbc           = new GridBagConstraints();
        gbc.gridx     = 1;
        gbc.gridy     = 1;
        gbc.gridwidth = 6;
        gbc.fill      = GridBagConstraints.BOTH;
        panel1.add(panel2, gbc);
        bonusRuleBox = new JComboBox();
        gbc          = new GridBagConstraints();
        gbc.gridx    = 0;
        gbc.gridy    = 0;
        gbc.weightx  = 4.0;
        gbc.anchor   = GridBagConstraints.WEST;
        gbc.fill     = GridBagConstraints.BOTH;
        gbc.ipady    = 8;
        panel2.add(bonusRuleBox, gbc);
        final JPanel spacer8 = new JPanel();
        gbc         = new GridBagConstraints();
        gbc.gridx   = 1;
        gbc.gridy   = 0;
        gbc.weightx = 0.5;
        gbc.fill    = GridBagConstraints.HORIZONTAL;
        gbc.ipady   = 8;
        panel2.add(spacer8, gbc);
        bonusOfWhatTxt = new JTextField();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 2;
        gbc.gridy      = 0;
        gbc.weightx    = 1.0;
        gbc.anchor     = GridBagConstraints.WEST;
        gbc.fill       = GridBagConstraints.BOTH;
        gbc.ipady      = 8;
        gbc.insets     = new Insets(0, 5, 0, 0);
        panel2.add(bonusOfWhatTxt, gbc);
        bonusOfWhatBox = new JComboBox();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 3;
        gbc.gridy      = 0;
        gbc.weightx    = 4.0;
        gbc.anchor     = GridBagConstraints.WEST;
        gbc.fill       = GridBagConstraints.BOTH;
        gbc.ipady      = 8;
        panel2.add(bonusOfWhatBox, gbc);
        final JPanel spacer9 = new JPanel();
        gbc         = new GridBagConstraints();
        gbc.gridx   = 4;
        gbc.gridy   = 0;
        gbc.weightx = 0.5;
        gbc.fill    = GridBagConstraints.HORIZONTAL;
        gbc.ipady   = 8;
        panel2.add(spacer9, gbc);
        bonusPeriodTxt = new JTextField();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 5;
        gbc.gridy      = 0;
        gbc.weightx    = 1.0;
        gbc.anchor     = GridBagConstraints.WEST;
        gbc.fill       = GridBagConstraints.BOTH;
        gbc.ipady      = 8;
        gbc.insets     = new Insets(0, 5, 0, 0);
        panel2.add(bonusPeriodTxt, gbc);
        bonusPeriodBox = new JComboBox();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 6;
        gbc.gridy      = 0;
        gbc.weightx    = 4.0;
        gbc.anchor     = GridBagConstraints.WEST;
        gbc.fill       = GridBagConstraints.BOTH;
        gbc.ipady      = 8;
        panel2.add(bonusPeriodBox, gbc);
        final JPanel spacer10 = new JPanel();
        gbc         = new GridBagConstraints();
        gbc.gridx   = 7;
        gbc.gridy   = 0;
        gbc.weightx = 0.5;
        gbc.fill    = GridBagConstraints.HORIZONTAL;
        gbc.ipady   = 8;
        panel2.add(spacer10, gbc);
        removeBonusRuleBtn = new JButton();
        removeBonusRuleBtn.setText("Obriši pravilo");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 8;
        gbc.gridy   = 0;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipadx   = 20;
        gbc.ipady   = 8;
        gbc.insets  = new Insets(0, 5, 0, 0);
        panel2.add(removeBonusRuleBtn, gbc);
        saveBonusRuleBtn = new JButton();
        saveBonusRuleBtn.setText("Sačuvaj pravilo");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 9;
        gbc.gridy   = 0;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipadx   = 20;
        gbc.ipady   = 8;
        gbc.insets  = new Insets(0, 5, 0, 0);
        panel2.add(saveBonusRuleBtn, gbc);
        isplatiZaposleneBtn = new JButton();
        isplatiZaposleneBtn.setText("Isplati zaposlene");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 10;
        gbc.gridy   = 0;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipadx   = 20;
        gbc.ipady   = 8;
        gbc.insets  = new Insets(0, 5, 0, 0);
        panel2.add(isplatiZaposleneBtn, gbc);
        final JLabel label4 = new JLabel();
        label4.setHorizontalAlignment(4);
        label4.setHorizontalTextPosition(4);
        label4.setRequestFocusEnabled(false);
        label4.setText("Od: ");
        gbc       = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 5;
        gbc.fill  = GridBagConstraints.BOTH;
        gbc.ipady = 5;
        panel1.add(label4, gbc);
        odPeriodPrihodiTxt = new JTextField();
        odPeriodPrihodiTxt.setText("__.__.____.");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 6;
        gbc.gridy   = 5;
        gbc.weightx = 0.3;
        gbc.anchor  = GridBagConstraints.WEST;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipadx   = 100;
        gbc.ipady   = 3;
        gbc.insets  = new Insets(0, 0, 3, 0);
        panel1.add(odPeriodPrihodiTxt, gbc);
        final JLabel label5 = new JLabel();
        label5.setHorizontalAlignment(4);
        label5.setHorizontalTextPosition(4);
        label5.setText("Do: ");
        gbc       = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 6;
        gbc.fill  = GridBagConstraints.BOTH;
        gbc.ipady = 5;
        panel1.add(label5, gbc);
        doPeriodPrihodiTxt = new JTextField();
        doPeriodPrihodiTxt.setText("__.__.____.");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 6;
        gbc.gridy   = 6;
        gbc.weightx = 0.3;
        gbc.anchor  = GridBagConstraints.WEST;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipadx   = 100;
        gbc.ipady   = 3;
        gbc.insets  = new Insets(0, 0, 3, 0);
        panel1.add(doPeriodPrihodiTxt, gbc);
        showPrihodiBtn = new JButton();
        showPrihodiBtn.setText("Prikaži");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 6;
        gbc.gridy   = 7;
        gbc.weightx = 0.3;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipadx   = 40;
        gbc.ipady   = 3;
        panel1.add(showPrihodiBtn, gbc);
        final JPanel spacer11 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 5;
        gbc.gridy      = 5;
        gbc.gridheight = 3;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipadx      = 5;
        panel1.add(spacer11, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 1;
        gbc.gridy     = 3;
        gbc.gridwidth = 6;
        gbc.weightx   = 1.0;
        gbc.weighty   = 1.0;
        gbc.fill      = GridBagConstraints.BOTH;
        panel1.add(scrollPane1, gbc);
        Font prihodiRashodiTblFont = this.$$$getFont$$$("Consolas", -1, 15, prihodiRashodiTbl.getFont());
        if (prihodiRashodiTblFont != null) prihodiRashodiTbl.setFont(prihodiRashodiTblFont);
        scrollPane1.setViewportView(prihodiRashodiTbl);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        tabbedPane.addTab("Salon", panel3);
        final JLabel label6 = new JLabel();
        label6.setHorizontalAlignment(4);
        label6.setHorizontalTextPosition(4);
        label6.setText("Naziv salona: ");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 1;
        gbc.gridy  = 1;
        gbc.fill   = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 15, 10);
        panel3.add(label6, gbc);
        final JLabel label7 = new JLabel();
        label7.setHorizontalAlignment(4);
        label7.setHorizontalTextPosition(4);
        label7.setText("Pečetak radnog vremena: ");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 1;
        gbc.gridy  = 2;
        gbc.fill   = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 15, 10);
        panel3.add(label7, gbc);
        final JLabel label8 = new JLabel();
        label8.setHorizontalAlignment(4);
        label8.setHorizontalTextPosition(4);
        label8.setText("Kraj radnog vremena: ");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 1;
        gbc.gridy  = 3;
        gbc.fill   = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 15, 10);
        panel3.add(label8, gbc);
        final JPanel spacer12 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 0;
        gbc.gridy      = 1;
        gbc.gridheight = 4;
        gbc.weightx    = 1.0;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        panel3.add(spacer12, gbc);
        final JPanel spacer13 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 3;
        gbc.gridy      = 1;
        gbc.gridheight = 4;
        gbc.weightx    = 1.0;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        panel3.add(spacer13, gbc);
        final JPanel spacer14 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 0;
        gbc.gridy     = 0;
        gbc.gridwidth = 4;
        gbc.weighty   = 1.0;
        gbc.fill      = GridBagConstraints.VERTICAL;
        panel3.add(spacer14, gbc);
        final JPanel spacer15 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 0;
        gbc.gridy     = 5;
        gbc.gridwidth = 4;
        gbc.weighty   = 1.0;
        gbc.fill      = GridBagConstraints.VERTICAL;
        panel3.add(spacer15, gbc);
        pocetakRadaTxt = new JTextField();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 2;
        gbc.gridy      = 2;
        gbc.weightx    = 1.0;
        gbc.fill       = GridBagConstraints.BOTH;
        gbc.ipady      = 10;
        gbc.insets     = new Insets(0, 0, 15, 100);
        panel3.add(pocetakRadaTxt, gbc);
        krajRadaTxt = new JTextField();
        gbc         = new GridBagConstraints();
        gbc.gridx   = 2;
        gbc.gridy   = 3;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipady   = 10;
        gbc.insets  = new Insets(0, 0, 15, 100);
        panel3.add(krajRadaTxt, gbc);
        editSalonDataBtn = new JButton();
        editSalonDataBtn.setText("Sačuvaj");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 2;
        gbc.gridy   = 4;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipady   = 10;
        gbc.insets  = new Insets(0, 0, 0, 100);
        panel3.add(editSalonDataBtn, gbc);
        nazivSalonaTxt = new JTextField();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 2;
        gbc.gridy      = 1;
        gbc.weightx    = 1.0;
        gbc.fill       = GridBagConstraints.BOTH;
        gbc.ipady      = 10;
        gbc.insets     = new Insets(0, 0, 15, 100);
        panel3.add(nazivSalonaTxt, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridBagLayout());
        tabbedPane.addTab("Kartica lojalnosti", panel4);
        final JPanel spacer16 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 0;
        gbc.gridy      = 1;
        gbc.gridheight = 3;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipadx      = 60;
        panel4.add(spacer16, gbc);
        final JPanel spacer17 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 6;
        gbc.gridy      = 1;
        gbc.gridheight = 3;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipadx      = 60;
        panel4.add(spacer17, gbc);
        final JPanel spacer18 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 0;
        gbc.gridy     = 0;
        gbc.gridwidth = 7;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 60;
        panel4.add(spacer18, gbc);
        final JPanel spacer19 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 0;
        gbc.gridy     = 4;
        gbc.gridwidth = 7;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 60;
        panel4.add(spacer19, gbc);
        minLojalnostTxt = new JTextField();
        gbc             = new GridBagConstraints();
        gbc.gridx       = 3;
        gbc.gridy       = 1;
        gbc.weightx     = 1.0;
        gbc.anchor      = GridBagConstraints.WEST;
        gbc.fill        = GridBagConstraints.BOTH;
        gbc.ipady       = 8;
        panel4.add(minLojalnostTxt, gbc);
        makeLojalneBtn = new JButton();
        makeLojalneBtn.setText("Generiši listu klijenata sa karticom lojalnosti");
        gbc       = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 1;
        gbc.fill  = GridBagConstraints.BOTH;
        gbc.ipady = 8;
        panel4.add(makeLojalneBtn, gbc);
        final JPanel spacer20 = new JPanel();
        gbc       = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 1;
        gbc.fill  = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 3;
        gbc.ipady = 8;
        panel4.add(spacer20, gbc);
        final JLabel label9 = new JLabel();
        label9.setText("Minimalni potrošeni iznos:");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 1;
        gbc.gridy  = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill   = GridBagConstraints.VERTICAL;
        gbc.ipady  = 8;
        panel4.add(label9, gbc);
        final JPanel spacer21 = new JPanel();
        gbc       = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill  = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 3;
        gbc.ipady = 8;
        panel4.add(spacer21, gbc);
        final JPanel spacer22 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 1;
        gbc.gridy     = 2;
        gbc.gridwidth = 5;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 10;
        panel4.add(spacer22, gbc);
        final JScrollPane scrollPane2 = new JScrollPane();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 1;
        gbc.gridy     = 3;
        gbc.gridwidth = 5;
        gbc.weightx   = 1.0;
        gbc.weighty   = 1.0;
        gbc.fill      = GridBagConstraints.BOTH;
        panel4.add(scrollPane2, gbc);
        lojalniLst = new JList();
        Font lojalniLstFont = this.$$$getFont$$$("Consolas", -1, 15, lojalniLst.getFont());
        if (lojalniLstFont != null) lojalniLst.setFont(lojalniLstFont);
        scrollPane2.setViewportView(lojalniLst);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new GridBagLayout());
        tabbedPane.addTab("Baza podataka", panel5);
        final JPanel spacer23 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 0;
        gbc.gridy      = 1;
        gbc.gridheight = 5;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipadx      = 60;
        panel5.add(spacer23, gbc);
        final JPanel spacer24 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 6;
        gbc.gridy      = 1;
        gbc.gridheight = 5;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipadx      = 60;
        panel5.add(spacer24, gbc);
        final JPanel spacer25 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 0;
        gbc.gridy     = 0;
        gbc.gridwidth = 7;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 60;
        panel5.add(spacer25, gbc);
        final JPanel spacer26 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 0;
        gbc.gridy     = 6;
        gbc.gridwidth = 7;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 60;
        panel5.add(spacer26, gbc);
        entitetTypeBox = new JComboBox();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 1;
        gbc.gridy      = 1;
        gbc.gridwidth  = 5;
        gbc.anchor     = GridBagConstraints.WEST;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipady      = 8;
        panel5.add(entitetTypeBox, gbc);
        final JPanel spacer27 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 1;
        gbc.gridy     = 4;
        gbc.gridwidth = 5;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 10;
        panel5.add(spacer27, gbc);
        addEntitetBtn = new JButton();
        addEntitetBtn.setText("Dodaj");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 1;
        gbc.gridy   = 5;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.HORIZONTAL;
        gbc.ipady   = 15;
        panel5.add(addEntitetBtn, gbc);
        editEntitetBtn = new JButton();
        editEntitetBtn.setText("Izmeni");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 3;
        gbc.gridy   = 5;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.HORIZONTAL;
        gbc.ipady   = 15;
        panel5.add(editEntitetBtn, gbc);
        removeEntietBtn = new JButton();
        removeEntietBtn.setText("Obriši");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 5;
        gbc.gridy   = 5;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.HORIZONTAL;
        gbc.ipady   = 15;
        panel5.add(removeEntietBtn, gbc);
        final JPanel spacer28 = new JPanel();
        gbc       = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.fill  = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 10;
        gbc.ipady = 15;
        panel5.add(spacer28, gbc);
        final JPanel spacer29 = new JPanel();
        gbc       = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 5;
        gbc.fill  = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 10;
        gbc.ipady = 15;
        panel5.add(spacer29, gbc);
        final JPanel spacer30 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 1;
        gbc.gridy     = 2;
        gbc.gridwidth = 5;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 10;
        panel5.add(spacer30, gbc);
        final JScrollPane scrollPane3 = new JScrollPane();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 1;
        gbc.gridy     = 3;
        gbc.gridwidth = 5;
        gbc.weightx   = 1.0;
        gbc.weighty   = 1.0;
        gbc.fill      = GridBagConstraints.BOTH;
        panel5.add(scrollPane3, gbc);
        entitetiTbl = new JTable();
        scrollPane3.setViewportView(entitetiTbl);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new GridBagLayout());
        tabbedPane.addTab("Izveštaji", panel6);
        final JPanel spacer31 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 0;
        gbc.gridy      = 1;
        gbc.gridheight = 8;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipadx      = 60;
        panel6.add(spacer31, gbc);
        final JPanel spacer32 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 0;
        gbc.gridy     = 0;
        gbc.gridwidth = 10;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 60;
        panel6.add(spacer32, gbc);
        final JPanel spacer33 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 0;
        gbc.gridy     = 9;
        gbc.gridwidth = 10;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 60;
        panel6.add(spacer33, gbc);
        odPeriodIzvestajiTxt = new JTextField();
        odPeriodIzvestajiTxt.setText("__.__.____.");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 3;
        gbc.gridy   = 6;
        gbc.weightx = 1.0;
        gbc.anchor  = GridBagConstraints.WEST;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipady   = 10;
        gbc.insets  = new Insets(0, 0, 4, 0);
        panel6.add(odPeriodIzvestajiTxt, gbc);
        final JLabel label10 = new JLabel();
        label10.setText("Od:");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 1;
        gbc.gridy  = 6;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill   = GridBagConstraints.VERTICAL;
        gbc.ipady  = 10;
        panel6.add(label10, gbc);
        final JLabel label11 = new JLabel();
        label11.setText("Do:");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 1;
        gbc.gridy  = 7;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill   = GridBagConstraints.VERTICAL;
        gbc.ipady  = 10;
        panel6.add(label11, gbc);
        doPeriodIzvestajiTxt = new JTextField();
        doPeriodIzvestajiTxt.setText("__.__.____.");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 3;
        gbc.gridy   = 7;
        gbc.weightx = 1.0;
        gbc.anchor  = GridBagConstraints.WEST;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipady   = 10;
        gbc.insets  = new Insets(0, 0, 4, 0);
        panel6.add(doPeriodIzvestajiTxt, gbc);
        makeIzvestajiBtn = new JButton();
        makeIzvestajiBtn.setLabel("Prikaži");
        makeIzvestajiBtn.setText("Prikaži");
        gbc        = new GridBagConstraints();
        gbc.gridx  = 3;
        gbc.gridy  = 8;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill   = GridBagConstraints.HORIZONTAL;
        gbc.ipady  = 10;
        panel6.add(makeIzvestajiBtn, gbc);
        final JPanel spacer34 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 1;
        gbc.gridy     = 5;
        gbc.gridwidth = 3;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 30;
        panel6.add(spacer34, gbc);
        final JLabel label12 = new JLabel();
        label12.setHorizontalAlignment(4);
        label12.setText("Izvršeno: ");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 5;
        gbc.gridy   = 1;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.HORIZONTAL;
        gbc.ipady   = 15;
        panel6.add(label12, gbc);
        izvrsenoLbl = new JLabel();
        izvrsenoLbl.setText("0");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 6;
        gbc.gridy   = 1;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipady   = 15;
        gbc.insets  = new Insets(0, 10, 0, 0);
        panel6.add(izvrsenoLbl, gbc);
        final JPanel spacer35 = new JPanel();
        gbc           = new GridBagConstraints();
        gbc.gridx     = 5;
        gbc.gridy     = 3;
        gbc.gridwidth = 4;
        gbc.fill      = GridBagConstraints.VERTICAL;
        gbc.ipady     = 20;
        panel6.add(spacer35, gbc);
        final JLabel label13 = new JLabel();
        label13.setHorizontalAlignment(4);
        label13.setText("Otkazao klijent: ");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 5;
        gbc.gridy   = 2;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.HORIZONTAL;
        gbc.ipady   = 15;
        panel6.add(label13, gbc);
        otkazaoKlijentLbl = new JLabel();
        otkazaoKlijentLbl.setText("0");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 6;
        gbc.gridy   = 2;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipady   = 15;
        gbc.insets  = new Insets(0, 10, 0, 0);
        panel6.add(otkazaoKlijentLbl, gbc);
        final JPanel spacer36 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 2;
        gbc.gridy      = 6;
        gbc.gridheight = 3;
        gbc.fill       = GridBagConstraints.BOTH;
        gbc.ipadx      = 3;
        gbc.ipady      = 10;
        panel6.add(spacer36, gbc);
        final JPanel spacer37 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 4;
        gbc.gridy      = 1;
        gbc.gridheight = 8;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipadx      = 30;
        panel6.add(spacer37, gbc);
        final JPanel spacer38 = new JPanel();
        gbc            = new GridBagConstraints();
        gbc.gridx      = 9;
        gbc.gridy      = 1;
        gbc.gridheight = 8;
        gbc.fill       = GridBagConstraints.HORIZONTAL;
        gbc.ipadx      = 60;
        panel6.add(spacer38, gbc);
        final JLabel label14 = new JLabel();
        label14.setHorizontalAlignment(4);
        label14.setText("Nije se pojavio: ");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 7;
        gbc.gridy   = 1;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.HORIZONTAL;
        gbc.ipady   = 15;
        panel6.add(label14, gbc);
        nijeSePojavioLbl = new JLabel();
        nijeSePojavioLbl.setText("0");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 8;
        gbc.gridy   = 1;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipady   = 15;
        gbc.insets  = new Insets(0, 10, 0, 0);
        panel6.add(nijeSePojavioLbl, gbc);
        otkazaoSalonLbl = new JLabel();
        otkazaoSalonLbl.setText("0");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 8;
        gbc.gridy   = 2;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.BOTH;
        gbc.ipady   = 15;
        gbc.insets  = new Insets(0, 10, 0, 0);
        panel6.add(otkazaoSalonLbl, gbc);
        final JLabel label15 = new JLabel();
        label15.setHorizontalAlignment(4);
        label15.setText("Otkazao salon: ");
        gbc         = new GridBagConstraints();
        gbc.gridx   = 7;
        gbc.gridy   = 2;
        gbc.weightx = 1.0;
        gbc.fill    = GridBagConstraints.HORIZONTAL;
        gbc.ipady   = 15;
        panel6.add(label15, gbc);
        final JScrollPane scrollPane4     = new JScrollPane();
        Font              scrollPane4Font = this.$$$getFont$$$("Consolas", -1, 15, scrollPane4.getFont());
        if (scrollPane4Font != null) scrollPane4.setFont(scrollPane4Font);
        gbc            = new GridBagConstraints();
        gbc.gridx      = 1;
        gbc.gridy      = 1;
        gbc.gridwidth  = 3;
        gbc.gridheight = 4;
        gbc.weightx    = 6.0;
        gbc.weighty    = 1.0;
        gbc.fill       = GridBagConstraints.BOTH;
        panel6.add(scrollPane4, gbc);
        tretmaniIzvestajTbl = new JTable();
        Font tretmaniIzvestajTblFont = this.$$$getFont$$$("Consolas", -1, 15, tretmaniIzvestajTbl.getFont());
        if (tretmaniIzvestajTblFont != null) tretmaniIzvestajTbl.setFont(tretmaniIzvestajTblFont);
        scrollPane4.setViewportView(tretmaniIzvestajTbl);
        final JScrollPane scrollPane5     = new JScrollPane();
        Font              scrollPane5Font = this.$$$getFont$$$("Consolas", -1, 15, scrollPane5.getFont());
        if (scrollPane5Font != null) scrollPane5.setFont(scrollPane5Font);
        gbc            = new GridBagConstraints();
        gbc.gridx      = 5;
        gbc.gridy      = 4;
        gbc.gridwidth  = 4;
        gbc.gridheight = 5;
        gbc.weightx    = 1.0;
        gbc.fill       = GridBagConstraints.BOTH;
        panel6.add(scrollPane5, gbc);
        zaposleniIzvestajTbl = new JTable();
        Font zaposleniIzvestajTblFont = this.$$$getFont$$$("Consolas", -1, 15, zaposleniIzvestajTbl.getFont());
        if (zaposleniIzvestajTblFont != null) zaposleniIzvestajTbl.setFont(zaposleniIzvestajTblFont);
        scrollPane5.setViewportView(zaposleniIzvestajTbl);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new GridBagLayout());
        tabbedPane.addTab("Dijagrami", panel7);
    }
    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {resultName = currentFont.getName();} else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {resultName = fontName;} else {
                resultName = currentFont.getName();
            }
        }
        Font    font             = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac            = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font    fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }
    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {return mainPanel;}
}
